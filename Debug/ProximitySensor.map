Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                              ./dio.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                              ./OS.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)
                              ./Queue.o (malloc)

Allocating common symbols
Common symbol       size              file

__brkval            0x2               /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)
__flp               0x2               /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
LOAD ./LCD.o
LOAD ./OS.o
LOAD ./Queue.o
LOAD ./dio.o
LOAD ./keypad.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xc58
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092        0x0 ./LCD.o
 .text          0x0000000000000092        0x0 ./OS.o
 .text          0x0000000000000092        0x0 ./Queue.o
 .text          0x0000000000000092        0x0 ./dio.o
 .text          0x0000000000000092        0x0 ./keypad.o
 .text          0x0000000000000092        0x0 ./main.o
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000092        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000000092                . = ALIGN (0x2)
 *(.text.*)
 .text.LCD_WriteData
                0x0000000000000092        0xc ./LCD.o
 .text.LCD_ToggleEnablePin
                0x000000000000009e       0x2e ./LCD.o
 .text.LCD_SendCommand
                0x00000000000000cc       0x2a ./LCD.o
 .text.LCD_Init
                0x00000000000000f6       0x54 ./LCD.o
                0x00000000000000f6                LCD_Init
 .text.LCD_WriteChar
                0x000000000000014a       0x2a ./LCD.o
                0x000000000000014a                LCD_WriteChar
 .text.LCD_WriteString
                0x0000000000000174       0x32 ./LCD.o
                0x0000000000000174                LCD_WriteString
 .text.LCD_SetCursor
                0x00000000000001a6       0x1c ./LCD.o
                0x00000000000001a6                LCD_SetCursor
 .text.LCD_ClearScreen
                0x00000000000001c2       0x14 ./LCD.o
                0x00000000000001c2                LCD_ClearScreen
 .text.OS_Stop  0x00000000000001d6       0x12 ./OS.o
                0x00000000000001d6                OS_Stop
 .text.OS_Start
                0x00000000000001e8       0x18 ./OS.o
                0x00000000000001e8                OS_Start
 .text.OS_Init  0x0000000000000200       0x1c ./OS.o
                0x0000000000000200                OS_Init
 .text.OS_SuspendTask
                0x000000000000021c       0x1a ./OS.o
                0x000000000000021c                OS_SuspendTask
 .text.OS_RestartTask
                0x0000000000000236       0x28 ./OS.o
                0x0000000000000236                OS_RestartTask
 .text.OS_ActivateTask
                0x000000000000025e       0x30 ./OS.o
                0x000000000000025e                OS_ActivateTask
 .text.OS_DelayTask
                0x000000000000028e       0x30 ./OS.o
                0x000000000000028e                OS_DelayTask
 .text.OS_AddTask
                0x00000000000002be       0x58 ./OS.o
                0x00000000000002be                OS_AddTask
 .text.OS_SchedulerUpdate
                0x0000000000000316       0xd8 ./OS.o
                0x0000000000000316                OS_SchedulerUpdate
 .text.__vector_7
                0x00000000000003ee       0x48 ./OS.o
                0x00000000000003ee                __vector_7
 .text.OS_DispatchTasks
                0x0000000000000436       0x46 ./OS.o
                0x0000000000000436                OS_DispatchTasks
 .text.Queue_IsEmpty
                0x000000000000047c       0x16 ./Queue.o
                0x000000000000047c                Queue_IsEmpty
 .text.Queue_IsFull
                0x0000000000000492       0x10 ./Queue.o
                0x0000000000000492                Queue_IsFull
 .text.Queue_Create
                0x00000000000004a2       0x2e ./Queue.o
                0x00000000000004a2                Queue_Create
 .text.Queue_Enqueue
                0x00000000000004d0       0x36 ./Queue.o
                0x00000000000004d0                Queue_Enqueue
 .text.Queue_Dequeue
                0x0000000000000506       0x52 ./Queue.o
                0x0000000000000506                Queue_Dequeue
 .text.Queue_GetHead
                0x0000000000000558       0x3e ./Queue.o
                0x0000000000000558                Queue_GetHead
 .text.Queue_DeleteHead
                0x0000000000000596       0x48 ./Queue.o
                0x0000000000000596                Queue_DeleteHead
 .text.Queue_Traverse
                0x00000000000005de       0x6e ./Queue.o
                0x00000000000005de                Queue_Traverse
 .text.DIO_ConfigPin
                0x000000000000064c       0x3a ./dio.o
                0x000000000000064c                DIO_ConfigPin
 .text.DIO_ConfigPort
                0x0000000000000686       0x28 ./dio.o
                0x0000000000000686                DIO_ConfigPort
 .text.DIO_WritePin
                0x00000000000006ae       0x3a ./dio.o
                0x00000000000006ae                DIO_WritePin
 .text.DIO_ReadPin
                0x00000000000006e8       0x36 ./dio.o
                0x00000000000006e8                DIO_ReadPin
 .text.DIO_WritePort
                0x000000000000071e       0x16 ./dio.o
                0x000000000000071e                DIO_WritePort
 .text.DIO_ReadPort
                0x0000000000000734       0x18 ./dio.o
                0x0000000000000734                DIO_ReadPort
 .text.Keypad_Update
                0x000000000000074c      0x1b8 ./keypad.o
                0x000000000000074c                Keypad_Update
 .text.Keypad_Init
                0x0000000000000904       0x72 ./keypad.o
                0x0000000000000904                Keypad_Init
 .text.Keypad_GetChar
                0x0000000000000976       0x44 ./keypad.o
                0x0000000000000976                Keypad_GetChar
 .text.app      0x00000000000009ba       0x28 ./main.o
                0x00000000000009ba                app
 .text.main     0x00000000000009e2       0x30 ./main.o
                0x00000000000009e2                main
 .text.libgcc.mul
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000a12        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000000a12      0x242 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000000a12                malloc
                0x0000000000000b42                free
                0x0000000000000c54                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000c54        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                0x0000000000000c54                exit
                0x0000000000000c54                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000c54        0x4 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000c58                _etext = .

.data           0x0000000000800060       0x2a load address 0x0000000000000c58
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 ./LCD.o
 .data          0x0000000000800060        0x0 ./OS.o
 .data          0x0000000000800060        0x0 ./Queue.o
 .data          0x0000000000800060        0x0 ./dio.o
 .data          0x0000000000800060        0x0 ./keypad.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x6 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800060                __malloc_heap_end
                0x0000000000800062                __malloc_heap_start
                0x0000000000800064                __malloc_margin
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.pin_reg_arr
                0x0000000000800066        0x8 ./dio.o
 .rodata.port_reg_arr
                0x000000000080006e        0x8 ./dio.o
 .rodata.dir_reg_arr
                0x0000000000800076        0x8 ./dio.o
 .rodata.Keypad_Char
                0x000000000080007e        0xc ./keypad.o
 *(.gnu.linkonce.d*)
                0x000000000080008a                . = ALIGN (0x2)
                0x000000000080008a                _edata = .
                0x000000000080008a                PROVIDE (__data_end, .)

.bss            0x000000000080008a       0x4b
                0x000000000080008a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o
 .bss           0x000000000080008a        0x0 ./LCD.o
 .bss           0x000000000080008a        0x0 ./OS.o
 .bss           0x000000000080008a        0x0 ./Queue.o
 .bss           0x000000000080008a        0x0 ./dio.o
 .bss           0x000000000080008a        0x0 ./keypad.o
 .bss           0x000000000080008a        0x0 ./main.o
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x000000000080008a        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)
 *(.bss*)
 .bss.OS_State  0x000000000080008a        0x1 ./OS.o
 .bss.TCBs_Counter
                0x000000000080008b        0x1 ./OS.o
 .bss.TCBs_Array
                0x000000000080008c       0x2a ./OS.o
 .bss.previous_sample.2025
                0x00000000008000b6        0xc ./keypad.o
 .bss.button_state.2024
                0x00000000008000c2        0xc ./keypad.o
 .bss.current_row.2023
                0x00000000008000ce        0x1 ./keypad.o
 .bss.Keypad_Buffer
                0x00000000008000cf        0x2 ./keypad.o
 *(COMMON)
 COMMON         0x00000000008000d1        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)
                0x00000000008000d1                __brkval
                0x00000000008000d3                __flp
                0x00000000008000d5                PROVIDE (__bss_end, .)
                0x0000000000000c58                __data_load_start = LOADADDR (.data)
                0x0000000000000c82                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000d5        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008000d5                _end = .
                0x00000000008000d5                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2874
 *(.stab)
 .stab          0x0000000000000000      0x804 ./LCD.o
 .stab          0x0000000000000804      0x84c ./OS.o
                                        0xa20 (size before relaxing)
 .stab          0x0000000000001050      0x8f4 ./Queue.o
                                        0xac8 (size before relaxing)
 .stab          0x0000000000001944      0x4a4 ./dio.o
                                        0x6cc (size before relaxing)
 .stab          0x0000000000001de8      0x6c0 ./keypad.o
                                        0x99c (size before relaxing)
 .stab          0x00000000000024a8      0x3cc ./main.o
                                        0x624 (size before relaxing)

.stabstr        0x0000000000000000     0x192a
 *(.stabstr)
 .stabstr       0x0000000000000000     0x192a ./LCD.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./LCD.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./OS.o
 .comment       0x0000000000000011       0x12 ./Queue.o
 .comment       0x0000000000000011       0x12 ./dio.o
 .comment       0x0000000000000011       0x12 ./keypad.o
 .comment       0x0000000000000011       0x12 ./main.o
 .comment       0x0000000000000011       0x12 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(malloc.o)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x4e6
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.debug_abbrev   0x0000000000000000      0x4a3
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x196
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega32.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(ProximitySensor.elf elf32-avr)
LOAD linker stubs
